/* 
 * Task Card Information Hierarchy Styling
 * Optimized for ADHD/autism users with clear visual emphasis hierarchy:
 * 1. Task Description (Primary) - What needs to be done
 * 2. Subject (Secondary) - Category/classification
 * 3. Due Date (Tertiary) - When it's needed
 * 4. Completion Status (Quaternary) - Task state
 */

:root {
  /* Task card base variables */
  --task-card-bg-color: var(--bg-secondary);
  --task-card-border-radius: var(--border-radius);
  --task-card-shadow: var(--shadow-sm);
  --task-card-padding: var(--space-md);
  --task-card-border-left-width: 4px;
  --task-card-min-height: 120px;
  --task-card-transition: transform 0.3s var(--transition-function),
                          box-shadow 0.3s var(--transition-function),
                          opacity 0.3s var(--transition-function),
                          background-color 0.3s var(--transition-function);
  
  /* Task description styling by emphasis level */
  --task-description-high-font-size: 1.2rem;
  --task-description-medium-font-size: 1.1rem;
  --task-description-low-font-size: 1rem;
  --task-description-font-weight: 700;
  --task-description-low-font-weight: 600;
  --task-description-color: var(--text-accent);
  --task-description-line-height: 1.3;
  
  /* Subject/categorization styling */
  --task-subject-padding: var(--space-xs) var(--space-sm);
  --task-subject-border-radius: var(--border-radius-sm);
  --task-subject-font-size: 0.8rem;
  --task-subject-font-weight: 700;
  --task-subject-color: var(--bg-primary);
  --task-subject-min-width: 44px;
  --task-subject-height: 28px;
  --task-subject-shadow: var(--shadow-sm);
  
  /* Due date styling */
  --task-meta-font-size: 0.8rem;
  --task-meta-color: var(--text-muted);
  --task-due-date-color: var(--text-secondary);
  --task-due-date-font-weight: 600;
  --task-due-today-color: var(--accent-danger);
  --task-due-today-font-weight: 700;
  
  /* Complete button styling */
  --complete-btn-size: 48px;
  --complete-btn-bg: var(--bg-card);
  --complete-btn-border-color: var(--text-muted);
  --complete-btn-border-width: 2px;
  --complete-btn-color: var(--text-secondary);
  --complete-btn-font-size: 1.5rem;
  --complete-btn-hover-bg: var(--accent-success);
  --complete-btn-hover-color: var(--bg-primary);
  --complete-btn-hover-scale: 1.15;
  --complete-btn-active-scale: 0.95;
  
  /* Task type variations */
  --task-exam-highlight-color: var(--accent-danger);
  --task-assignment-highlight-color: var(--accent-primary);
  --task-reading-highlight-color: var(--accent-success);
}

/* Base task card styles */
.task-card {
  background-color: var(--task-card-bg-color);
  border-radius: var(--task-card-border-radius);
  box-shadow: var(--task-card-shadow);
  padding: var(--task-card-padding);
  display: flex;
  flex-direction: column;
  position: relative;
  border-left: var(--task-card-border-left-width) solid; /* Default border style, color assigned by subject classes */
  overflow: hidden;
  min-height: var(--task-card-min-height);
  transition: var(--task-card-transition);
}

.task-card-inner {
  display: flex;
  flex-direction: row;
  gap: var(--space-md);
  width: 100%;
  align-items: center;
}

.task-card-content {
  flex: 1;
  display: flex;
  flex-direction: column;
}

/* Task description - PRIMARY element in hierarchy */
.task-description {
  font-size: var(--task-description-medium-font-size);
  font-weight: var(--task-description-font-weight);
  margin-bottom: var(--space-md);
  color: var(--task-description-color);
  line-height: var(--task-description-line-height);
  order: 1;
  flex-grow: 1;
}

/* Emphasis level variations for task description */
.container-emphasis-high .task-description {
  font-size: var(--task-description-high-font-size);
}

.container-emphasis-medium .task-description {
  font-size: var(--task-description-medium-font-size);
}

.container-emphasis-low .task-description {
  font-size: var(--task-description-low-font-size);
  font-weight: var(--task-description-low-font-weight);
}

/* Subject/categorization - SECONDARY element in hierarchy */
.task-card-header {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  margin-bottom: var(--space-sm);
  flex-wrap: wrap;
  order: 0;
}

.task-subject {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--task-subject-padding);
  border-radius: var(--task-subject-border-radius);
  font-size: var(--task-subject-font-size);
  font-weight: var(--task-subject-font-weight);
  text-transform: uppercase;
  color: var(--task-subject-color);
  min-width: var(--task-subject-min-width);
  height: var(--task-subject-height);
  box-shadow: var(--task-subject-shadow);
}

/* Task type badges - initially hidden, shown based on task type */
.task-type {
  display: none;
}

.task-badge {
  display: none;
}

.exam-badge {
  display: none;
}

/* Temporal information - TERTIARY element in hierarchy */
.task-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: var(--task-meta-font-size);
  color: var(--task-meta-color);
  margin-top: auto;
  order: 2;
  opacity: 0.9;
}

.task-due-date {
  display: inline-flex;
  align-items: center;
  font-weight: var(--task-due-date-font-weight);
  color: var(--task-due-date-color);
}

.task-due-date-icon {
  margin-right: var(--space-xs);
  font-size: 0.9rem;
}

.task-date-label {
  margin-right: var(--space-xs);
  opacity: 0.7;
}

/* Due date emphasis for urgency */
.task-due-today {
  color: var(--task-due-today-color);
  font-weight: var(--task-due-today-font-weight);
}

/* Completion status - QUATERNARY element in hierarchy */
.complete-btn {
  width: var(--complete-btn-size);
  height: var(--complete-btn-size);
  min-width: var(--complete-btn-size);
  border-radius: 50%;
  background-color: var(--complete-btn-bg);
  border: var(--complete-btn-border-width) solid var(--complete-btn-border-color);
  color: var(--complete-btn-color);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: var(--complete-btn-font-size);
  transition: all 0.25s cubic-bezier(0.175, 0.885, 0.32, 1.275); /* Bouncy animation */
  position: relative;
  overflow: hidden;
  margin-right: var(--space-md);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.complete-btn:focus-visible {
  outline: 2px solid var(--accent-primary);
  outline-offset: 2px;
}

.complete-btn:hover {
  background-color: var(--complete-btn-hover-bg);
  border-color: var(--complete-btn-hover-bg);
  color: var(--complete-btn-hover-color);
  transform: scale(var(--complete-btn-hover-scale));
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.complete-btn:active {
  transform: scale(var(--complete-btn-active-scale));
  transition: all 0.1s ease;
}

.complete-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0) 70%);
  transform: scale(0);
  opacity: 0;
  transition: transform 0.5s ease, opacity 0.5s ease;
  border-radius: 50%;
}

.complete-btn:hover::before {
  transform: scale(1.5);
  opacity: 0.3;
}

/* Animation states for completion button */
.complete-btn.task-completing {
  animation: completeButtonPulse 1.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
  background-color: var(--accent-success);
  border-color: var(--accent-success);
  color: var(--bg-primary);
}

@keyframes completeButtonPulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(75, 201, 156, 0);
  }
  10% {
    transform: scale(1.2);
  }
  20% {
    transform: scale(1.1);
    box-shadow: 0 0 8px rgba(75, 201, 156, 0.3);
  }
  30% {
    transform: scale(1.3);
  }
  40% {
    transform: scale(1.2);
    box-shadow: 0 0 15px rgba(75, 201, 156, 0.5);
  }
  50% {
    transform: scale(1.4);
  }
  60% {
    transform: scale(1.3);
    box-shadow: 0 0 20px rgba(75, 201, 156, 0.7);
  }
  70% {
    transform: scale(1.5);
  }
  80% {
    transform: scale(1.4);
    box-shadow: 0 0 15px rgba(75, 201, 156, 0.5);
  }
  90% {
    transform: scale(1.2);
    box-shadow: 0 0 8px rgba(75, 201, 156, 0.3);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(75, 201, 156, 0);
  }
}

/* Task type variations - exams, assignments, readings */
.task-card.task-exam {
  border-left-color: var(--task-exam-highlight-color);
}

.task-card.task-exam .exam-badge {
  display: inline-flex;
  background-color: var(--task-exam-highlight-color);
}

.task-card.task-assignment {
  border-left-color: var(--task-assignment-highlight-color);
}

.task-card.task-assignment .task-badge {
  display: inline-flex;
  background-color: var(--task-assignment-highlight-color);
}

.task-card.task-reading {
  border-left-color: var(--task-reading-highlight-color);
}

/* Completed task styling */
.completed-task {
  opacity: 0.6;
  text-decoration: line-through;
  background-color: var(--bg-muted);
  border-left-color: var(--text-muted) !important;
  transition: all 0.3s ease;
}

.completed-task .complete-btn {
  background-color: var(--accent-success);
  border-color: var(--accent-success);
  color: var(--bg-primary);
}

.completed-task .task-description {
  color: var(--text-muted);
}

/* Subject color variations */
.subject-math {
  border-left-color: var(--subject-math);
}

.subject-math .task-subject {
  background-color: var(--subject-math);
}

.subject-finnish {
  border-left-color: var(--subject-finnish);
}

.subject-finnish .task-subject {
  background-color: var(--subject-finnish);
}

.subject-english {
  border-left-color: var(--subject-english);
}

.subject-english .task-subject {
  background-color: var(--subject-english);
}

.subject-history {
  border-left-color: var(--subject-history);
}

.subject-history .task-subject {
  background-color: var(--subject-history);
}

.subject-civics {
  border-left-color: var(--subject-civics);
}

.subject-civics .task-subject {
  background-color: var(--subject-civics);
}

/* Reset subject colors for completed tasks */
.completed-task.subject-math,
.completed-task.subject-finnish,
.completed-task.subject-english,
.completed-task.subject-history,
.completed-task.subject-civics {
  border-left-color: var(--text-muted) !important;
}

/* Media queries for responsive design */
@media (min-width: 600px) {
  :root {
    --task-card-padding: var(--space-lg);
    --task-description-high-font-size: 1.3rem;
    --task-description-medium-font-size: 1.2rem;
    --task-description-low-font-size: 1.1rem;
    --complete-btn-size: 52px;
  }
}

/* Task crumpling animation */
.task-completing {
  animation: taskCrumpleAnimation 1.8s forwards;
  transform-origin: center;
  perspective: 800px;
  position: relative;
  z-index: 10;
}

@keyframes taskCrumpleAnimation {
  0% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-sm);
  }
  15% {
    transform: scale(0.98) rotate(-2deg) translate(2px, -2px);
    border-radius: calc(var(--border-radius) + 2px);
    box-shadow: var(--shadow-sm), inset 0 0 5px rgba(0, 0, 0, 0.2);
  }
  30% {
    transform: scale(0.95) rotate(3deg) translate(-4px, 2px) skew(2deg, 0deg);
    border-radius: calc(var(--border-radius) + 4px);
    box-shadow: var(--shadow-sm), inset 0 0 10px rgba(0, 0, 0, 0.3);
  }
  45% {
    transform: scale(0.9) rotate(-3deg) translate(6px, -1px) skew(-3deg, 2deg);
    border-radius: calc(var(--border-radius) + 8px);
    box-shadow: var(--shadow), inset 0 0 15px rgba(0, 0, 0, 0.4);
  }
  60% {
    transform: scale(0.8) rotate(5deg) translate(-5px, 3px) skew(5deg, -3deg);
    border-radius: calc(var(--border-radius) + 12px);
    box-shadow: var(--shadow), inset 0 0 20px rgba(0, 0, 0, 0.5);
  }
  75% {
    transform: scale(0.75) rotate(-8deg) translate(7px, -2px) skew(-7deg, 4deg);
    border-radius: calc(var(--border-radius) + 16px);
    box-shadow: var(--shadow-lg), inset 0 0 25px rgba(0, 0, 0, 0.6);
  }
  85% {
    transform: scale(0.7) rotate(10deg) translate(-8px, 5px) skew(10deg, -5deg);
    border-radius: calc(var(--border-radius) + 20px);
    box-shadow: var(--shadow-lg), inset 0 0 30px rgba(0, 0, 0, 0.7);
  }
  95% {
    transform: scale(0.6) rotate(-5deg) translate(4px, -3px) skew(-5deg, 2deg);
    border-radius: calc(var(--border-radius) + 25px);
    box-shadow: var(--shadow-lg), inset 0 0 35px rgba(0, 0, 0, 0.8);
  }
  100% {
    transform: scale(0.65) rotate(2deg);
    opacity: 0.9;
    border-radius: calc(var(--border-radius) + 20px);
    box-shadow: var(--shadow), inset 0 0 30px rgba(0, 0, 0, 0.7);
  }
}

.task-completing::before, 
.task-completing::after {
  content: '';
  position: absolute;
  background-color: rgba(0, 0, 0, 0.1);
  pointer-events: none;
  opacity: 0;
  animation: wrinkleLinesAppear 1.5s forwards;
}

.task-completing::before {
  top: 30%;
  left: 10%;
  right: 10%;
  height: 1px;
  transform: rotate(-5deg) scaleX(0.5);
}

.task-completing::after {
  bottom: 40%;
  left: 20%;
  right: 15%;
  height: 1px;
  transform: rotate(7deg) scaleX(0.5);
}

@keyframes wrinkleLinesAppear {
  0% {
    opacity: 0;
    transform: scaleX(0.5) rotate(0deg);
  }
  30% {
    opacity: 0.3;
    transform: scaleX(0.8) rotate(-5deg);
  }
  70% {
    opacity: 0.7;
    transform: scaleX(1.2) rotate(7deg);
  }
  100% {
    opacity: 0.5;
    transform: scaleX(1) rotate(3deg);
  }
}

.completed-stamp {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: var(--accent-success);
  color: var(--bg-primary);
  padding: var(--space-xs) var(--space-sm);
  border-radius: var(--border-radius-sm);
  font-weight: 800;
  font-size: 0.7rem;
  transform: rotate(5deg);
  box-shadow: var(--shadow-sm);
  animation: stampAppear 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
  animation-delay: 1.2s; /* Start after most of the crumpling is complete */
  opacity: 0;
  z-index: 20;
}

@keyframes stampAppear {
  0% {
    transform: rotate(5deg) scale(0);
    opacity: 0;
  }
  70% {
    transform: rotate(5deg) scale(1.3);
  }
  85% {
    transform: rotate(5deg) scale(0.9);
  }
  100% {
    transform: rotate(5deg) scale(1);
    opacity: 1;
  }
}
